name: Fetch Movies & Encrypt

on:
  schedule:
    - cron: '0 */4 * * *'  # Runs every 4 hours
  workflow_dispatch:  # Allow manual triggering

jobs:
  fetch-movies:
    runs-on: ubuntu-latest

    steps:
      # Checkout repository
      - name: Checkout repository
        uses: actions/checkout@v2

      # Fetch movies
      - name: Fetch movies
        env:
          TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
        run: |
          mkdir -p movies_data

          # Fetch up to 50 pages (reduce to limit file size)
          for page in $(seq 1 50); do
            echo "Fetching movies for page $page..."
            movie_response=$(curl -s "https://api.themoviedb.org/3/discover/movie?api_key=$TMDB_API_KEY&page=$page")

            # Validate response and append to file
            echo "$movie_response" | jq -c '.results[]' >> movies_data/tmp_movies.json || echo "Invalid response for page $page"
          done

          # Combine results into JSON
          jq -s '{results: .}' movies_data/tmp_movies.json > movies_data/movies.json
          rm -f movies_data/tmp_movies.json

      # Encrypt JSON
      - name: Encrypt JSON file (reduced passes)
        run: |
          if [ -f movies_data/movies.json ]; then
            cp movies_data/movies.json movies_data/movies_encrypted.json
            for i in $(seq 1 100); do
              cat movies_data/movies_encrypted.json | base64 > movies_data/tmp.json
              mv movies_data/tmp.json movies_data/movies_encrypted.json
              echo "Encryption pass $i completed."
            done
            rm movies_data/movies.json
          else
            echo "movies.json not found. Exiting..."
            exit 1
          fi

      # Validate encrypted file
      - name: Validate Base64 file
        run: |
          if base64 --decode movies_data/movies_encrypted.json > /dev/null 2>&1; then
            echo "Base64 validation passed."
          else
            echo "Base64 validation failed. Exiting..."
            exit 1
          fi

      # Commit and push the encrypted file
      - name: Commit and push encrypted movie data
        run: |
          git config user.name "tdbnz-coding"
          git config user.email "bise@smartbusiness.me"
          git add movies_data/movies.json
          git commit -m "Update movies & Encrypt"
          git push origin main

